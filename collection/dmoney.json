{
	"info": {
		"_postman_id": "a095d05d-8d04-41a6-88db-d5be58a1d25b",
		"name": "DMoney",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24414195",
		"_collection_link": "https://planetary-meadow-699494.postman.co/workspace/SDET~34abb867-0464-4c87-aa6a-aedd78cb0a38/collection/24414195-a095d05d-8d04-41a6-88db-d5be58a1d25b?action=share&creator=24414195&source=collection_link"
	},
	"item": [
		{
			"name": "User Login",
			"item": [
				{
					"name": "User can login successfully if right creds provided",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\",jsonData.token)\r",
									"pm.environment.set(\"token\",jsonData.token)\r",
									"\r",
									"pm.test(\"Login is successful\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    console.log(\"message\")\r",
									"    pm.expect(message).contains(\"Login successfully\")\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The role is showing\", function () {\r",
									"   var jsonData= pm.response.json();\r",
									"    var actual_role= jsonData.role;\r",
									"    console.log(\"role\")\r",
									"    pm.expect(actual_role).not.equal(null)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User can't login if wrong creds provided",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User can't login if password is incorrect\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var actual_message = jsonData.message; \r",
									"    pm.expect(actual_message).to.eql(\"Password incorrect\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"12345\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User List",
			"item": [
				{
					"name": "User LIst",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"If user data is showing\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    console.log(jsonData.users[0])\r",
									"    var id = jsonData.users[0].id\r",
									"    var phoneNumber = jsonData.users[0].phone_number;\r",
									"\r",
									" pm.expect(id).equal(1233)\r",
									" pm.expect(phoneNumber).contains(\"6909\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "New User",
			"item": [
				{
					"name": "Create new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User should be created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"userId\",jsonData.user.id)\r",
									"    pm.environment.set(\"userId\",jsonData.user.id)\r",
									"    pm.expect(jsonData.message).to.contains(\"User created\")\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var prefix=\"0150\";\r",
									"var nid_prefix = \"1100\";\r",
									"var randomNumber =_.random(1000000,9999999)\r",
									"var user_phone_number = prefix+randomNumber;\r",
									"\r",
									"var nid = nid_prefix+randomNumber;\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"phone_number\", user_phone_number)\r",
									"pm.collectionVariables.set(\"nid\", nid)\r",
									"\r",
									"pm.environment.set(\"phone_number\", user_phone_number)\r",
									"pm.environment.set(\"nid\", nid)\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phone_number}}\",\r\n    \"nid\":\"{{nid}}\",\r\n    \"role\":\"Customer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Duplicate user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"USer can not be created with existing mail or phone number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 12002,\r\n    \"name\": \"Beverly Graham\",\r\n    \"email\": \"Olga_Lowe@gmail.com\",\r\n    \"password\": \"1234\",\r\n    \"phone_number\": \"01508164952\",\r\n    \"nid\": \"11008164952\",\r\n    \"role\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update User",
			"item": [
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User updated\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randId = _.random(1000000,9999999);\r",
									"var prefix= \"0151\";\r",
									"\r",
									"var phoneNumber = prefix+randId;\r",
									"\r",
									"pm.collectionVariables.set(\"phone_number\", phoneNumber)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phone_number}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Specific data of User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User update\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"User updated\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randId = _.random(1000000,9999999);\r",
									"var prefix= \"0151\";\r",
									"\r",
									"var phoneNumber = prefix+randId;\r",
									"\r",
									"pm.collectionVariables.set(\"phone_number\", phoneNumber)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User gets created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User found\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/search/id/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"search",
						"id",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should be deleted successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/delete/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"delete",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjg0NzU3NzY3LCJleHAiOjE2ODQ3NTk1Njd9.0cASo9Yi7dis7F8Bo6On2EaNGtUsTymOqCaeDWWa5U8"
		},
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "phone_number",
			"value": "01503229592"
		},
		{
			"key": "nid",
			"value": "11003229592"
		},
		{
			"key": "userId",
			"value": 12153
		}
	]
}